export interface ComplianceFlag {
  title: string
  severity: number
  why_it_matters: string
  recommendation: string
  evidence: Array<{
    page: number
    quote: string
  }>
}

export interface AnalysisResult {
  summary: string
  overall_risk: number
  flags: ComplianceFlag[]
}

export function generateMarkdownReport(
  result: AnalysisResult,
  docName: string,
  timestamp: Date = new Date()
): string {
  const { summary, overall_risk, flags } = result
  
  let markdown = `# Compliance Analysis Report\n\n`
  markdown += `**Document:** ${docName}\n`
  markdown += `**Analysis Date:** ${timestamp.toLocaleString()}\n`
  markdown += `**Overall Risk Score:** ${overall_risk.toFixed(1)}%\n\n`
  
  markdown += `## Executive Summary\n\n`
  markdown += `${summary}\n\n`
  
  markdown += `## Risk Assessment\n\n`
  markdown += `**Overall Risk Level:** ${getRiskLevel(overall_risk)}\n\n`
  
  if (flags.length > 0) {
    markdown += `## Compliance Issues Found\n\n`
    
    flags.forEach((flag, index) => {
      markdown += `### ${index + 1}. ${flag.title}\n\n`
      markdown += `**Severity:** ${getSeverityLabel(flag.severity)} (${flag.severity}/5)\n\n`
      markdown += `**Why it matters:** ${flag.why_it_matters}\n\n`
      markdown += `**Recommendation:** ${flag.recommendation}\n\n`
      
      if (flag.evidence.length > 0) {
        markdown += `**Evidence:**\n\n`
        flag.evidence.forEach((evidence, evIndex) => {
          markdown += `${evIndex + 1}. **Page ${evidence.page}:** "${evidence.quote}"\n\n`
        })
      }
      
      markdown += `---\n\n`
    })
  } else {
    markdown += `## Compliance Status\n\n`
    markdown += `âœ… No significant compliance issues detected.\n\n`
  }
  
  markdown += `---\n\n`
  markdown += `*Report generated by AI Compliance Copilot powered by Groq*\n`
  
  return markdown
}

function getRiskLevel(risk: number): string {
  if (risk >= 80) return 'ðŸ”´ **CRITICAL**'
  if (risk >= 60) return 'ðŸŸ  **HIGH**'
  if (risk >= 40) return 'ðŸŸ¡ **MEDIUM**'
  if (risk >= 20) return 'ðŸŸ¢ **LOW**'
  return 'ðŸŸ¢ **MINIMAL**'
}

function getSeverityLabel(severity: number): string {
  if (severity >= 5) return 'ðŸ”´ Critical'
  if (severity >= 4) return 'ðŸŸ  High'
  if (severity >= 3) return 'ðŸŸ¡ Medium'
  if (severity >= 2) return 'ðŸŸ¢ Low'
  return 'ðŸŸ¢ Minimal'
}

export function downloadMarkdown(content: string, filename: string) {
  const blob = new Blob([content], { type: 'text/markdown' })
  const url = URL.createObjectURL(blob)
  const link = document.createElement('a')
  link.href = url
  link.download = filename
  document.body.appendChild(link)
  link.click()
  document.body.removeChild(link)
  URL.revokeObjectURL(url)
}